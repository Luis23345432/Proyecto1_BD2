services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: bd2_backend
    ports:
      - "8000:8000"
    environment:
      - JWT_SECRET=${JWT_SECRET:-change-me-in-.env}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5

  frontend:
    build:
      context: ./auth-app
      dockerfile: Dockerfile
    container_name: bd2_frontend
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8000}
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000"]
      interval: 15s
      timeout: 3s
      retries: 5

volumes:
  # alternatively, we could use a named volume; keeping a bind mount preserves data alongside repo
  data:
    driver: local
